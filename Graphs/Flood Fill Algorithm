private:
    void dfs(vector<vector<int>>& image, int sr, int sc, int newColor, vector<vector<int>> &ans, int row[], int col[], int inicolor){
    ans[sr][sc]=newColor;        
        int n=image.size();
        int m=image[0].size();
        for(int i=0;i<4;i++){
            int nrow=sr+row[i];
            int ncol=sc+col[i];
            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && image[nrow][ncol]==inicolor && ans[nrow][ncol]!=newColor){
                dfs(image, nrow, ncol, newColor, ans, row, col, inicolor);
            }
        }
    }
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        // Code here 
        int inicolor=image[sr][sc];
        vector<vector<int>> ans=image;
        int row[]={-1, 0, +1, 0};
        int col[]={0, +1, 0, -1, 0};
        dfs(image, sr, sc, newColor, ans, row, col, inicolor);
        return ans;
    }
