class Solution {
  public:
    int findCity(int n, int m, vector<vector<int>>& edges,
                 int distanceThreshold) 
    {
        //Your code here
        vector<vector<int>> dist(n, vector<int>(n, INT_MAX));
        for(auto it : edges){
            dist[it[0]][it[1]]=it[2];
            dist[it[1]][it[0]]=it[2];
        }
        for(int i=0;i<n;i++){
            dist[i][i]=0;
        }
        for(int k=0;k<n;k++){
            for(int i=0;i<n;i++){
                for(int j=0;j<n;j++){
                    if(dist[i][k]==INT_MAX || dist[k][j]==INT_MAX){
                        continue;
                    }
                    dist[i][j]=min(dist[i][j], dist[i][k]+dist[k][j]);
                }
            }
        }
        int cnt_city=n;
        int city_num=-1;
        for(int city=0;city<n;city++){
            int cnt=0;
            for(int adj_city=0;adj_city<n;adj_city++){
                if(dist[city][adj_city]<=distanceThreshold){
                    cnt++;
                }
            }
            if(cnt<=cnt_city){
                cnt_city=cnt;
                city_num=city;
            }
        }
        return city_num;
                     
    }
