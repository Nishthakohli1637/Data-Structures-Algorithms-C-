private:
    void print_dfs(int node, vector<int> adj[], int vis[], vector<int> &dfs){
        vis[node]=1;
        dfs.push_back(node);
        for(auto it :adj[node]){
            if(!vis[it]){
                print_dfs(it, adj, vis, dfs);
            }
        }
    }
  public:
    // Function to return a list containing the DFS traversal of the graph.
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        int vis[V]={0};
        int start=0;
        vector<int> dfs;
        print_dfs(start, adj, vis, dfs);
        return dfs;
    }
