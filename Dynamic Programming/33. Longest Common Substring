//Longest common substring
//substring - same string continuous
//when discontinuity occurs =0
//when same in continuous manner=+1
//same as Longest common common subsequence, same in continuous manner=+1, else =0;

#include<bits/stdc++.h>
using namespace std;
int Longest_common_substring(string x, string y, int n, int m){
    int dp[n+1][m+1];
    if(n==0 || m==0){
        return 0;
    }
    for(int i=n-1;i>=0;i--){
        for(int j=m-1;j>=0;j--){
            if(i==n){
                dp[i][j]=0;
            }
            if(j==m){
                dp[i][j]=0;
            }
            else{
                if(x[i]==y[i]){
                    dp[i][j]=1+dp[i+1][j+1];
                }
                else{
                    dp[i][j]=0;
                }
            }
        }
    }
    return dp[0][0];
}
int main(){
    string x;
    cin>>x;
    string y;
    cin>>y;
    int n=x.size();
    int m=y.size();
    cout<<Longest_common_substring(x, y, n, m);
}
