#include<bits/stdc++.h>
using namespace std;
int lps(string a, int n){
    string b=a;
    reverse(b.begin(), b.end());
    int dp[n+1][n+1];
    for(int i=0;i<=n;i++){
        for(int j=0;j<=n;j++){
            if(i==0 || j==0){
                dp[i][j]=0;
            }
        }
    }
    for(int i=1;i<=n;i++){
        for(int j=1;j<=n;j++){
            if(a[i-1]==b[j-1]){
                dp[i][j]=1+dp[i-1][j-1];
            }
            else{
                dp[i][j]=max(dp[i-1][j], dp[i][j-1]);
            }
        }
    }
    return dp[n][n];
}
int min_insert_to_make_string_palin(string a, int n){
    int del=n-lps(a, n);
    return del;
}
int main(){
    string a;
    cin>>a;
    int n=a.size();
    cout<<min_insert_to_make_string_palin(a, n);
}
