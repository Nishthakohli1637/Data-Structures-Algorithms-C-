class Solution {
public:
    string minWindow(string s, string t) {
        if(t.size()>s.size()){
            return "";
        }
        int k=t.size();
        unordered_map<char, int> mp;
        for(int i=0;i<k;i++){
            mp[t[i]]++;
        }
        int count=mp.size();
        int minv=INT_MAX;
        int i=0, j=0;
        int idx1=0;
        while(j<s.size()){
            if(mp.find(s[j])!=mp.end()){
                mp[s[j]]--;
                if(mp[s[j]]==0){
                    count--;
                }
            }
        while(count==0){
          if(j-i+1<minv){
            minv=j-i+1;
            idx1=i;
          }
                if(mp.find(s[i])!=mp.end()){
                    mp[s[i]]++;
                    if(mp[s[i]]==1){
                        count++;
                    }
                }
                i++;
                
            }
            j++;
            
        }
        
        if(minv==INT_MAX){
            return "";
        }
        return s.substr(idx1, minv);
        
        
    }
};
