#include<bits/stdc++.h>
using namespace std;
class CircularQueue{
    private:
    int *arr;
    int front;
    int rear;
    int size;
    public:
    CircularQueue(int size){
        this->size=size;
        front=-1;
        rear=-1;
        arr=new int[size];
    }
    bool enqueue(int x){
        if((front==0 && rear==size-1) || (rear==(front-1)%(size-1))){
            cout<<"queue is full"<<endl;
            return false;
        }
        else if(front==-1){
            front=rear=0;
        }
        else if(rear==size-1 && front!=0){
            rear=0;
        }
        else{
            rear++;
        }
        arr[rear]=x;
        return true;
    }
    int dequeue(){
        if(front==-1){
            cout<<"Queue is empty"<<endl;
            return -1;
        }
        int ans=arr[front];
        arr[front]=-1;
        if(front == rear){
            front=rear=-1;
        }
        else if(front==size-1){
            front=0;
    }
    else{
        front++;
    }
    return ans;
    }
};
int main(){
    CircularQueue cq(5);
    cq.enqueue(1);    
    cq.enqueue(2);  
    cq.enqueue(3);  
    cq.enqueue(4);  
    cq.enqueue(5);
    cout<<cq.dequeue()<<endl;
    
}
