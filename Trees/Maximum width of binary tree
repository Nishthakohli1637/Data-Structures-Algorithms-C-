// width- No. of nodes between two nodes


class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        if(root==NULL){
            return 0;
        }
        int ans=0;
        queue<pair<TreeNode*, int>> q;
        q.push({root, 0});
        while(!q.empty()){
            int size=q.size();
            int min=q.front().second;
            int first, last;
            for(int i=0;i<size;i++){
                long curr_val=q.front().second-min;
                TreeNode* node=q.front().first;
                q.pop();
                if(i==0){
                    first=curr_val;
                }
                if(i==size-1){
                    last=curr_val;
                }
                if(node->left){
                    q.push({node->left, curr_val*2+1});
                }
                if(node->right){
                    q.push({node->right, curr_val*2+2});
                }
            }
            ans=max(ans, last-first+1);
        }
        return ans;
        
    }
};
