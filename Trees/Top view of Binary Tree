

/*
struct Node
{
    int data;
    Node* left;
    Node* right;
};
*/
class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
        vector<int> ans;
        if(root==NULL){
            return ans;
        }
        map<int, int> nodes;
        queue<pair<Node *, int>> q;
        q.push(make_pair(root, 0));
        while(!q.empty()){
            pair<Node *, int> temp=q.front();
            q.pop();
            Node *front_val=temp.first;
            int hd=temp.second;
            if(nodes.find(hd)==nodes.end()){
                nodes[hd]=(front_val->data);
            }
            if(front_val->left){
                q.push(make_pair(front_val->left, hd-1));
            }
            if(front_val->right){
                q.push(make_pair(front_val->right, hd+1));
            }
        }
        for(auto i: nodes){
            ans.push_back(i.second);
        }
        return ans;
        
    }

};
