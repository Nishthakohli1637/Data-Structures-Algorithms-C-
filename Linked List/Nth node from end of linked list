class Solution{
public:
    int getNthFromLast(Node *head, int n)
    {
        if(head==NULL){
            return -1;
        }
        Node *p=head;
        Node *q=head;
        int cnt=0;
        while(head!=NULL){
            cnt++;
            head=head->next;
        }
        if(n>cnt){
            return -1;
        }
           
           for(int i=0;i<n;i++){
               p=p->next;
           }
           while(p!=NULL){
               p=p->next;
               q=q->next;
           }
           return q->data;
    }
};


//Method-2
class Solution{
public:
    int getNthFromLast(Node *head, int n)
    {
           // Your code here
           if(head==NULL){
            return -1;
        }
        Node *p=head;
        Node *q=head;
        int cnt=0;
        Node *temp=head;
        while(temp!=NULL){
            cnt++;
            temp=temp->next;
        }
        if(n>cnt){
            return -1;
        }
        int pos=cnt-n;
        for(int i=0;i<pos;i++){
            p=p->next;
        }
           return p->data;
    }
};
