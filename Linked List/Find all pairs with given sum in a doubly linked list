vector<pair<int, int>> findPairs(Node* head, int k)
{
    // Write your code here.
    vector<pair<int, int>> ans;
    Node* temp1=head;
    while(temp1!=NULL){
        Node* temp2=temp1->next;
        while(temp2!=NULL && temp1->data+temp2->data<=k){
            if(temp1->data+temp2->data==k){
                ans.push_back({temp1->data, temp2->data});
            }
            temp2=temp2->next;
        }
        temp1=temp1->next;
    }
    return ans;
}


APPROACH 2
Node* find_tail(Node* head){
    Node* temp=head;
    while(temp->next!=NULL){
        temp=temp->next;
    }
    return temp;
}
vector<pair<int, int>> findPairs(Node* head, int k)
{
    // Write your code here.
    vector<pair<int, int>> ans;
    if(head==NULL){
        return ans;
    }
    Node* left=head;
    Node* right=find_tail(head);
    while(left->data < right->data){
        if((left->data+right->data)==k){
            ans.push_back({left->data, right->data});
            left=left->next;
            right=right->prev;
        }
        else if((left->data+right->data)<k){
            left=left->next;
        }
        else{
            right=right->prev;
        }
    }
    return ans;
}
