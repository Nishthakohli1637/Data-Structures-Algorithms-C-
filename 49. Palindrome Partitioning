#include<bits/stdc++.h>
using namespace std;
int palindrome_partition(string str, int n){
    bool dp[n][n];
    for(int g=0;g<n;g++){
        for(int i=0, j=g;j<n;i++,j++){
            if(g==0){
                dp[i][j]=true;
            }
            else if(g==1){
                dp[i][j]=str[i]==str[j];
            }
            else{
                if(str[i]==str[j] && dp[i+1][j-1]==true){
                    dp[i][j]=true;
                }
                else{
                    dp[i][j]=false;
                }
            }
        }
    }
    int v[n][n];
    for(int g=0;g<n;g++){
        for(int i=0, j=g;j<n;i++, j++){
            if(g==0){
                v[i][j]=0;
            }
            else if(g==1){
                v[i][j]=1;
            }
            else{
                if(dp[i][j]){
                    v[i][j]=0;
                }
                else{
                    int minv=INT_MAX;
                    for(int k=i;k<j;k++){
                        int l=v[i][k];
                        int r=v[k+1][j];
                        int val=l+r+1;
                        if(val<minv){
                            minv=val;
                        }
                    }
                    v[i][j]=minv;
                }
            }
        }
    }
    return v[0][n-1];
}
int main(){
    string str;
    cin>>str;
    int n=str.size();
    cout<<palindrome_partition(str, n);
}
