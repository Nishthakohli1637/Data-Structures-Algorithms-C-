class Solution {
public:
int peakindex(MountainArray &mountainArr){
    int n=mountainArr.length();
    int s=0, e=n-1;
    
    while(s<e){
        int mid=s+(e-s)/2;
        if(mountainArr.get(mid)<mountainArr.get(mid+1)){
            
            s=mid+1;
        }
        else{
            e=mid;
        }
    }
    return s;
}
    int findInMountainArray(int target, MountainArray &mountainArr) {
        int n=mountainArr.length();
        int peak=peakindex(mountainArr);
        int s=0, e=peak-1;
       
        while(s<=e){
            int mid=s+(e-s)/2;
            if(mountainArr.get(mid)==target){
               return mid;
            }
            else if(target>mountainArr.get(mid)){
                s=mid+1;
            }
            else{
                e=mid-1;
            }
        }
        s=peak, e=n-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(mountainArr.get(mid)==target){
               return mid;
            }
            else if(target>mountainArr.get(mid)){
                e=mid-1;
            }
            else{
                s=mid+1;
            }
        }
        return -1;
    }
};
