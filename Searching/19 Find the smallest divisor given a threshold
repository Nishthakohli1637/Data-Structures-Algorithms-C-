class Solution {
public:
    int smallestDivisor(vector<int>& nums, int threshold) {
      int maxv=INT_MIN;
      for(int i=0;i<nums.size();i++){
          maxv=max(maxv, nums[i]);
      }  
      if(threshold==nums.size()){
          return maxv;
      }
      long long int s=1, e=maxv, mid=INT_MAX;
      long long int ans=-1;
      while(s<=e){
          mid=s+(e-s)/2;
          if(number(nums, mid, threshold)){
              ans=mid;
              e=mid-1;
          }
          else{
              s=mid+1;
          }
      }
      return ans;
    }
    bool number(vector<int>& nums, int mid, int threshold){
        long long int t_val=0;
        for(int i=0;i<nums.size();i++){
            long long int val=ceil(nums[i]*1.0/mid);
            t_val+=val;
            // if(nums[i]%mid!=0){
            //     t_val++;
            // }
        }
        return t_val<=threshold;
    }
};
