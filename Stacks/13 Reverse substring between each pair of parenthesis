class Solution {
public:
    string reverseParentheses(string s) {
        queue<int>q;
        stack<int> st;
        for(int i=0;i<s.size();i++){
            char ch=s[i];
            if(ch!=')'){
                st.push(ch);
            }
            else if(ch==')'){
                while(st.top()!='('){
                    q.push(st.top());
                    st.pop();
                }
                st.pop();
                while(!q.empty()){
                    st.push(q.front());
                    q.pop();
                }
            }
        }
        string ans="";
        while(!st.empty()){
            ans.push_back(st.top());
            st.pop();
        }
        reverse(ans.begin(), ans.end());
        return ans;
    }
};
